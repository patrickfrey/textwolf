.TH "textwolf::XMLPathSelect::Array" 3 "10 Jun 2011" "textwolf" \" -*- nroff -*-
.ad l
.nh
.SH NAME
textwolf::XMLPathSelect::Array \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBtextwolf::throws_exception\fP.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBArray\fP (unsigned int p_maxSize)"
.br
.ti -1c
.RI "\fB~Array\fP ()"
.br
.ti -1c
.RI "void \fBpush_back\fP (const Element &elem)"
.br
.ti -1c
.RI "void \fBpop_back\fP ()"
.br
.ti -1c
.RI "Element & \fBoperator[]\fP (unsigned int idx)"
.br
.ti -1c
.RI "Element & \fBback\fP ()"
.br
.ti -1c
.RI "void \fBresize\fP (unsigned int p_size)"
.br
.ti -1c
.RI "unsigned int \fBsize\fP () const "
.br
.ti -1c
.RI "bool \fBempty\fP () const "
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "Element * \fBm_ar\fP"
.br
.ti -1c
.RI "unsigned int \fBm_size\fP"
.br
.ti -1c
.RI "unsigned int \fBm_maxSize\fP"
.br
.in -1c

.SS "template<class InputIterator, class InputCharSet_ = charset::UTF8, class OutputCharSet_ = charset::UTF8, class EntityMap_ = std::map<const char*,UChar>>template<typename Element> class textwolf::XMLPathSelect< InputIterator, InputCharSet_, OutputCharSet_, EntityMap_ >::Array< Element >"

.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<class InputIterator , class InputCharSet_  = charset::UTF8, class OutputCharSet_  = charset::UTF8, class EntityMap_  = std::map<const char*,UChar>> template<typename Element> \fBtextwolf::XMLPathSelect\fP< InputIterator, InputCharSet_, OutputCharSet_, EntityMap_ >::\fBArray\fP< Element >::\fBArray\fP (unsigned int p_maxSize)\fC [inline]\fP"
.SS "template<class InputIterator , class InputCharSet_  = charset::UTF8, class OutputCharSet_  = charset::UTF8, class EntityMap_  = std::map<const char*,UChar>> template<typename Element> \fBtextwolf::XMLPathSelect\fP< InputIterator, InputCharSet_, OutputCharSet_, EntityMap_ >::\fBArray\fP< Element >::~\fBArray\fP ()\fC [inline]\fP"
.SH "Member Function Documentation"
.PP 
.SS "template<class InputIterator , class InputCharSet_  = charset::UTF8, class OutputCharSet_  = charset::UTF8, class EntityMap_  = std::map<const char*,UChar>> template<typename Element> Element& \fBtextwolf::XMLPathSelect\fP< InputIterator, InputCharSet_, OutputCharSet_, EntityMap_ >::\fBArray\fP< Element >::back ()\fC [inline]\fP"
.SS "template<class InputIterator , class InputCharSet_  = charset::UTF8, class OutputCharSet_  = charset::UTF8, class EntityMap_  = std::map<const char*,UChar>> template<typename Element> bool \fBtextwolf::XMLPathSelect\fP< InputIterator, InputCharSet_, OutputCharSet_, EntityMap_ >::\fBArray\fP< Element >::empty () const\fC [inline]\fP"
.SS "template<class InputIterator , class InputCharSet_  = charset::UTF8, class OutputCharSet_  = charset::UTF8, class EntityMap_  = std::map<const char*,UChar>> template<typename Element> Element& \fBtextwolf::XMLPathSelect\fP< InputIterator, InputCharSet_, OutputCharSet_, EntityMap_ >::\fBArray\fP< Element >::operator[] (unsigned int idx)\fC [inline]\fP"
.SS "template<class InputIterator , class InputCharSet_  = charset::UTF8, class OutputCharSet_  = charset::UTF8, class EntityMap_  = std::map<const char*,UChar>> template<typename Element> void \fBtextwolf::XMLPathSelect\fP< InputIterator, InputCharSet_, OutputCharSet_, EntityMap_ >::\fBArray\fP< Element >::pop_back ()\fC [inline]\fP"
.SS "template<class InputIterator , class InputCharSet_  = charset::UTF8, class OutputCharSet_  = charset::UTF8, class EntityMap_  = std::map<const char*,UChar>> template<typename Element> void \fBtextwolf::XMLPathSelect\fP< InputIterator, InputCharSet_, OutputCharSet_, EntityMap_ >::\fBArray\fP< Element >::push_back (const Element & elem)\fC [inline]\fP"
.SS "template<class InputIterator , class InputCharSet_  = charset::UTF8, class OutputCharSet_  = charset::UTF8, class EntityMap_  = std::map<const char*,UChar>> template<typename Element> void \fBtextwolf::XMLPathSelect\fP< InputIterator, InputCharSet_, OutputCharSet_, EntityMap_ >::\fBArray\fP< Element >::resize (unsigned int p_size)\fC [inline]\fP"
.SS "template<class InputIterator , class InputCharSet_  = charset::UTF8, class OutputCharSet_  = charset::UTF8, class EntityMap_  = std::map<const char*,UChar>> template<typename Element> unsigned int \fBtextwolf::XMLPathSelect\fP< InputIterator, InputCharSet_, OutputCharSet_, EntityMap_ >::\fBArray\fP< Element >::size () const\fC [inline]\fP"
.SH "Member Data Documentation"
.PP 
.SS "template<class InputIterator , class InputCharSet_  = charset::UTF8, class OutputCharSet_  = charset::UTF8, class EntityMap_  = std::map<const char*,UChar>> template<typename Element> Element* \fBtextwolf::XMLPathSelect\fP< InputIterator, InputCharSet_, OutputCharSet_, EntityMap_ >::\fBArray\fP< Element >::\fBm_ar\fP\fC [private]\fP"
.SS "template<class InputIterator , class InputCharSet_  = charset::UTF8, class OutputCharSet_  = charset::UTF8, class EntityMap_  = std::map<const char*,UChar>> template<typename Element> unsigned int \fBtextwolf::XMLPathSelect\fP< InputIterator, InputCharSet_, OutputCharSet_, EntityMap_ >::\fBArray\fP< Element >::\fBm_maxSize\fP\fC [private]\fP"
.SS "template<class InputIterator , class InputCharSet_  = charset::UTF8, class OutputCharSet_  = charset::UTF8, class EntityMap_  = std::map<const char*,UChar>> template<typename Element> unsigned int \fBtextwolf::XMLPathSelect\fP< InputIterator, InputCharSet_, OutputCharSet_, EntityMap_ >::\fBArray\fP< Element >::\fBm_size\fP\fC [private]\fP"

.SH "Author"
.PP 
Generated automatically by Doxygen for textwolf from the source code.
