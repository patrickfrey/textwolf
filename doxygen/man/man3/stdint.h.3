.TH "textwolf/include/port/stdint.h" 3 "14 Jun 2011" "textwolf" \" -*- nroff -*-
.ad l
.nh
.SH NAME
textwolf/include/port/stdint.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include <limits.h>\fP
.br
\fC#include <wchar.h>\fP
.br

.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fB_W64\fP"
.br
.ti -1c
.RI "#define \fBINT8_MIN\fP   ((\fBint8_t\fP)_I8_MIN)"
.br
.ti -1c
.RI "#define \fBINT8_MAX\fP   _I8_MAX"
.br
.ti -1c
.RI "#define \fBINT16_MIN\fP   ((\fBint16_t\fP)_I16_MIN)"
.br
.ti -1c
.RI "#define \fBINT16_MAX\fP   _I16_MAX"
.br
.ti -1c
.RI "#define \fBINT32_MIN\fP   ((\fBint32_t\fP)_I32_MIN)"
.br
.ti -1c
.RI "#define \fBINT32_MAX\fP   _I32_MAX"
.br
.ti -1c
.RI "#define \fBINT64_MIN\fP   ((\fBint64_t\fP)_I64_MIN)"
.br
.ti -1c
.RI "#define \fBINT64_MAX\fP   _I64_MAX"
.br
.ti -1c
.RI "#define \fBUINT8_MAX\fP   _UI8_MAX"
.br
.ti -1c
.RI "#define \fBUINT16_MAX\fP   _UI16_MAX"
.br
.ti -1c
.RI "#define \fBUINT32_MAX\fP   _UI32_MAX"
.br
.ti -1c
.RI "#define \fBUINT64_MAX\fP   _UI64_MAX"
.br
.ti -1c
.RI "#define \fBINT_LEAST8_MIN\fP   INT8_MIN"
.br
.ti -1c
.RI "#define \fBINT_LEAST8_MAX\fP   INT8_MAX"
.br
.ti -1c
.RI "#define \fBINT_LEAST16_MIN\fP   INT16_MIN"
.br
.ti -1c
.RI "#define \fBINT_LEAST16_MAX\fP   INT16_MAX"
.br
.ti -1c
.RI "#define \fBINT_LEAST32_MIN\fP   INT32_MIN"
.br
.ti -1c
.RI "#define \fBINT_LEAST32_MAX\fP   INT32_MAX"
.br
.ti -1c
.RI "#define \fBINT_LEAST64_MIN\fP   INT64_MIN"
.br
.ti -1c
.RI "#define \fBINT_LEAST64_MAX\fP   INT64_MAX"
.br
.ti -1c
.RI "#define \fBUINT_LEAST8_MAX\fP   UINT8_MAX"
.br
.ti -1c
.RI "#define \fBUINT_LEAST16_MAX\fP   UINT16_MAX"
.br
.ti -1c
.RI "#define \fBUINT_LEAST32_MAX\fP   UINT32_MAX"
.br
.ti -1c
.RI "#define \fBUINT_LEAST64_MAX\fP   UINT64_MAX"
.br
.ti -1c
.RI "#define \fBINT_FAST8_MIN\fP   INT8_MIN"
.br
.ti -1c
.RI "#define \fBINT_FAST8_MAX\fP   INT8_MAX"
.br
.ti -1c
.RI "#define \fBINT_FAST16_MIN\fP   INT16_MIN"
.br
.ti -1c
.RI "#define \fBINT_FAST16_MAX\fP   INT16_MAX"
.br
.ti -1c
.RI "#define \fBINT_FAST32_MIN\fP   INT32_MIN"
.br
.ti -1c
.RI "#define \fBINT_FAST32_MAX\fP   INT32_MAX"
.br
.ti -1c
.RI "#define \fBINT_FAST64_MIN\fP   INT64_MIN"
.br
.ti -1c
.RI "#define \fBINT_FAST64_MAX\fP   INT64_MAX"
.br
.ti -1c
.RI "#define \fBUINT_FAST8_MAX\fP   UINT8_MAX"
.br
.ti -1c
.RI "#define \fBUINT_FAST16_MAX\fP   UINT16_MAX"
.br
.ti -1c
.RI "#define \fBUINT_FAST32_MAX\fP   UINT32_MAX"
.br
.ti -1c
.RI "#define \fBUINT_FAST64_MAX\fP   UINT64_MAX"
.br
.ti -1c
.RI "#define \fBINTPTR_MIN\fP   INT32_MIN"
.br
.ti -1c
.RI "#define \fBINTPTR_MAX\fP   INT32_MAX"
.br
.ti -1c
.RI "#define \fBUINTPTR_MAX\fP   UINT32_MAX"
.br
.ti -1c
.RI "#define \fBINTMAX_MIN\fP   INT64_MIN"
.br
.ti -1c
.RI "#define \fBINTMAX_MAX\fP   INT64_MAX"
.br
.ti -1c
.RI "#define \fBUINTMAX_MAX\fP   UINT64_MAX"
.br
.ti -1c
.RI "#define \fBPTRDIFF_MIN\fP   _I32_MIN"
.br
.ti -1c
.RI "#define \fBPTRDIFF_MAX\fP   _I32_MAX"
.br
.ti -1c
.RI "#define \fBSIG_ATOMIC_MIN\fP   INT_MIN"
.br
.ti -1c
.RI "#define \fBSIG_ATOMIC_MAX\fP   INT_MAX"
.br
.ti -1c
.RI "#define \fBSIZE_MAX\fP   _UI32_MAX"
.br
.ti -1c
.RI "#define \fBWCHAR_MIN\fP   0"
.br
.ti -1c
.RI "#define \fBWCHAR_MAX\fP   _UI16_MAX"
.br
.ti -1c
.RI "#define \fBWINT_MIN\fP   0"
.br
.ti -1c
.RI "#define \fBWINT_MAX\fP   _UI16_MAX"
.br
.ti -1c
.RI "#define \fBINT8_C\fP(val)   val##i8"
.br
.ti -1c
.RI "#define \fBINT16_C\fP(val)   val##i16"
.br
.ti -1c
.RI "#define \fBINT32_C\fP(val)   val##i32"
.br
.ti -1c
.RI "#define \fBINT64_C\fP(val)   val##i64"
.br
.ti -1c
.RI "#define \fBUINT8_C\fP(val)   val##ui8"
.br
.ti -1c
.RI "#define \fBUINT16_C\fP(val)   val##ui16"
.br
.ti -1c
.RI "#define \fBUINT32_C\fP(val)   val##ui32"
.br
.ti -1c
.RI "#define \fBUINT64_C\fP(val)   val##ui64"
.br
.ti -1c
.RI "#define \fBINTMAX_C\fP   INT64_C"
.br
.ti -1c
.RI "#define \fBUINTMAX_C\fP   UINT64_C"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef signed char \fBint8_t\fP"
.br
.ti -1c
.RI "typedef signed short \fBint16_t\fP"
.br
.ti -1c
.RI "typedef signed int \fBint32_t\fP"
.br
.ti -1c
.RI "typedef unsigned char \fBuint8_t\fP"
.br
.ti -1c
.RI "typedef unsigned short \fBuint16_t\fP"
.br
.ti -1c
.RI "typedef unsigned int \fBuint32_t\fP"
.br
.ti -1c
.RI "typedef signed __int64 \fBint64_t\fP"
.br
.ti -1c
.RI "typedef unsigned __int64 \fBuint64_t\fP"
.br
.ti -1c
.RI "typedef \fBint8_t\fP \fBint_least8_t\fP"
.br
.ti -1c
.RI "typedef \fBint16_t\fP \fBint_least16_t\fP"
.br
.ti -1c
.RI "typedef \fBint32_t\fP \fBint_least32_t\fP"
.br
.ti -1c
.RI "typedef \fBint64_t\fP \fBint_least64_t\fP"
.br
.ti -1c
.RI "typedef \fBuint8_t\fP \fBuint_least8_t\fP"
.br
.ti -1c
.RI "typedef \fBuint16_t\fP \fBuint_least16_t\fP"
.br
.ti -1c
.RI "typedef \fBuint32_t\fP \fBuint_least32_t\fP"
.br
.ti -1c
.RI "typedef \fBuint64_t\fP \fBuint_least64_t\fP"
.br
.ti -1c
.RI "typedef \fBint8_t\fP \fBint_fast8_t\fP"
.br
.ti -1c
.RI "typedef \fBint16_t\fP \fBint_fast16_t\fP"
.br
.ti -1c
.RI "typedef \fBint32_t\fP \fBint_fast32_t\fP"
.br
.ti -1c
.RI "typedef \fBint64_t\fP \fBint_fast64_t\fP"
.br
.ti -1c
.RI "typedef \fBuint8_t\fP \fBuint_fast8_t\fP"
.br
.ti -1c
.RI "typedef \fBuint16_t\fP \fBuint_fast16_t\fP"
.br
.ti -1c
.RI "typedef \fBuint32_t\fP \fBuint_fast32_t\fP"
.br
.ti -1c
.RI "typedef \fBuint64_t\fP \fBuint_fast64_t\fP"
.br
.ti -1c
.RI "typedef _W64 signed int \fBintptr_t\fP"
.br
.ti -1c
.RI "typedef _W64 unsigned int \fBuintptr_t\fP"
.br
.ti -1c
.RI "typedef \fBint64_t\fP \fBintmax_t\fP"
.br
.ti -1c
.RI "typedef \fBuint64_t\fP \fBuintmax_t\fP"
.br
.in -1c
.SH "Define Documentation"
.PP 
.SS "#define _W64"
.SS "#define INT16_C(val)   val##i16"
.SS "#define INT16_MAX   _I16_MAX"
.SS "#define INT16_MIN   ((\fBint16_t\fP)_I16_MIN)"
.SS "#define INT32_C(val)   val##i32"
.SS "#define INT32_MAX   _I32_MAX"
.SS "#define INT32_MIN   ((\fBint32_t\fP)_I32_MIN)"
.SS "#define INT64_C(val)   val##i64"
.SS "#define INT64_MAX   _I64_MAX"
.SS "#define INT64_MIN   ((\fBint64_t\fP)_I64_MIN)"
.SS "#define INT8_C(val)   val##i8"
.SS "#define INT8_MAX   _I8_MAX"
.SS "#define INT8_MIN   ((\fBint8_t\fP)_I8_MIN)"
.SS "#define INT_FAST16_MAX   INT16_MAX"
.SS "#define INT_FAST16_MIN   INT16_MIN"
.SS "#define INT_FAST32_MAX   INT32_MAX"
.SS "#define INT_FAST32_MIN   INT32_MIN"
.SS "#define INT_FAST64_MAX   INT64_MAX"
.SS "#define INT_FAST64_MIN   INT64_MIN"
.SS "#define INT_FAST8_MAX   INT8_MAX"
.SS "#define INT_FAST8_MIN   INT8_MIN"
.SS "#define INT_LEAST16_MAX   INT16_MAX"
.SS "#define INT_LEAST16_MIN   INT16_MIN"
.SS "#define INT_LEAST32_MAX   INT32_MAX"
.SS "#define INT_LEAST32_MIN   INT32_MIN"
.SS "#define INT_LEAST64_MAX   INT64_MAX"
.SS "#define INT_LEAST64_MIN   INT64_MIN"
.SS "#define INT_LEAST8_MAX   INT8_MAX"
.SS "#define INT_LEAST8_MIN   INT8_MIN"
.SS "#define INTMAX_C   INT64_C"
.SS "#define INTMAX_MAX   INT64_MAX"
.SS "#define INTMAX_MIN   INT64_MIN"
.SS "#define INTPTR_MAX   INT32_MAX"
.SS "#define INTPTR_MIN   INT32_MIN"
.SS "#define PTRDIFF_MAX   _I32_MAX"
.SS "#define PTRDIFF_MIN   _I32_MIN"
.SS "#define SIG_ATOMIC_MAX   INT_MAX"
.SS "#define SIG_ATOMIC_MIN   INT_MIN"
.SS "#define SIZE_MAX   _UI32_MAX"
.SS "#define UINT16_C(val)   val##ui16"
.SS "#define UINT16_MAX   _UI16_MAX"
.SS "#define UINT32_C(val)   val##ui32"
.SS "#define UINT32_MAX   _UI32_MAX"
.SS "#define UINT64_C(val)   val##ui64"
.SS "#define UINT64_MAX   _UI64_MAX"
.SS "#define UINT8_C(val)   val##ui8"
.SS "#define UINT8_MAX   _UI8_MAX"
.SS "#define UINT_FAST16_MAX   UINT16_MAX"
.SS "#define UINT_FAST32_MAX   UINT32_MAX"
.SS "#define UINT_FAST64_MAX   UINT64_MAX"
.SS "#define UINT_FAST8_MAX   UINT8_MAX"
.SS "#define UINT_LEAST16_MAX   UINT16_MAX"
.SS "#define UINT_LEAST32_MAX   UINT32_MAX"
.SS "#define UINT_LEAST64_MAX   UINT64_MAX"
.SS "#define UINT_LEAST8_MAX   UINT8_MAX"
.SS "#define UINTMAX_C   UINT64_C"
.SS "#define UINTMAX_MAX   UINT64_MAX"
.SS "#define UINTPTR_MAX   UINT32_MAX"
.SS "#define WCHAR_MAX   _UI16_MAX"
.SS "#define WCHAR_MIN   0"
.SS "#define WINT_MAX   _UI16_MAX"
.SS "#define WINT_MIN   0"
.SH "Typedef Documentation"
.PP 
.SS "typedef signed short \fBint16_t\fP"
.SS "typedef signed int \fBint32_t\fP"
.SS "typedef signed __int64 \fBint64_t\fP"
.SS "typedef signed char \fBint8_t\fP"
.SS "typedef \fBint16_t\fP \fBint_fast16_t\fP"
.SS "typedef \fBint32_t\fP \fBint_fast32_t\fP"
.SS "typedef \fBint64_t\fP \fBint_fast64_t\fP"
.SS "typedef \fBint8_t\fP \fBint_fast8_t\fP"
.SS "typedef \fBint16_t\fP \fBint_least16_t\fP"
.SS "typedef \fBint32_t\fP \fBint_least32_t\fP"
.SS "typedef \fBint64_t\fP \fBint_least64_t\fP"
.SS "typedef \fBint8_t\fP \fBint_least8_t\fP"
.SS "typedef \fBint64_t\fP \fBintmax_t\fP"
.SS "typedef _W64 signed int \fBintptr_t\fP"
.SS "typedef unsigned short \fBuint16_t\fP"
.SS "typedef unsigned int \fBuint32_t\fP"
.SS "typedef unsigned __int64 \fBuint64_t\fP"
.SS "typedef unsigned char \fBuint8_t\fP"
.SS "typedef \fBuint16_t\fP \fBuint_fast16_t\fP"
.SS "typedef \fBuint32_t\fP \fBuint_fast32_t\fP"
.SS "typedef \fBuint64_t\fP \fBuint_fast64_t\fP"
.SS "typedef \fBuint8_t\fP \fBuint_fast8_t\fP"
.SS "typedef \fBuint16_t\fP \fBuint_least16_t\fP"
.SS "typedef \fBuint32_t\fP \fBuint_least32_t\fP"
.SS "typedef \fBuint64_t\fP \fBuint_least64_t\fP"
.SS "typedef \fBuint8_t\fP \fBuint_least8_t\fP"
.SS "typedef \fBuint64_t\fP \fBuintmax_t\fP"
.SS "typedef _W64 unsigned int \fBuintptr_t\fP"
.SH "Author"
.PP 
Generated automatically by Doxygen for textwolf from the source code.
